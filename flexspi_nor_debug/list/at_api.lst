###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.3.193/W32 for ARM         26/Jun/2019  16:21:11
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  C:\Development\gzkc_smart_nbiot\csdk\eng\atm\at_api.c
#    Command line =  
#        -f C:\Users\nxf42695\AppData\Local\Temp\2\EWE768.tmp
#        (C:\Development\gzkc_smart_nbiot\csdk\eng\atm\at_api.c -D DEBUG -D
#        USE_RTOS -D XIP_EXTERNAL_FLASH=1 -D XIP_BOOT_HEADER_ENABLE=1 -D
#        CPU_MIMXRT1052DVL6B -D FSL_RTOS_FREE_RTOS -D PRINTF_ADVANCED_ENABLE -D
#        "MBEDTLS_CONFIG_FILE=\"ksdk_mbedtls_config.h\"" -lC
#        C:\Development\gzkc_smart_nbiot\flexspi_nor_debug\list -lA
#        C:\Development\gzkc_smart_nbiot\flexspi_nor_debug\list --diag_suppress
#        Pa082,Pa050 -o C:\Development\gzkc_smart_nbiot\flexspi_nor_debug\obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M7 -e --fpu=VFPv5_d16 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" --preinclude
#        C:\Development\gzkc_smart_nbiot/source\app_preinclude.h -I
#        C:\Development\gzkc_smart_nbiot/board\ -I
#        C:\Development\gzkc_smart_nbiot/source\ -I
#        C:\Development\gzkc_smart_nbiot/CMSIS\ -I
#        C:\Development\gzkc_smart_nbiot/amazon-freertos/freertos/portable\ -I
#        C:\Development\gzkc_smart_nbiot/amazon-freertos/include\ -I
#        C:\Development\gzkc_smart_nbiot/component/lists\ -I
#        C:\Development\gzkc_smart_nbiot/component/serial_manager\ -I
#        C:\Development\gzkc_smart_nbiot/component/uart\ -I
#        C:\Development\gzkc_smart_nbiot/component/kv\ -I
#        C:\Development\gzkc_smart_nbiot/component/kv/include\ -I
#        C:\Development\gzkc_smart_nbiot/device\ -I
#        C:\Development\gzkc_smart_nbiot/doc\ -I
#        C:\Development\gzkc_smart_nbiot/drivers\ -I
#        C:\Development\gzkc_smart_nbiot/src\ -I
#        C:\Development\gzkc_smart_nbiot/startup\ -I
#        C:\Development\gzkc_smart_nbiot/utilities\ -I
#        C:\Development\gzkc_smart_nbiot/xip\ -I
#        C:\Development\gzkc_smart_nbiot\csdk\eng\ -I
#        C:\Development\gzkc_smart_nbiot\csdk\eng\atm\ -I
#        C:\Development\gzkc_smart_nbiot\csdk\eng\dev_model\ -I
#        C:\Development\gzkc_smart_nbiot\csdk\eng\dev_sign\ -I
#        C:\Development\gzkc_smart_nbiot\csdk\eng\infra\ -I
#        C:\Development\gzkc_smart_nbiot\csdk\eng\mqtt\ -I
#        C:\Development\gzkc_smart_nbiot\csdk\eng\wrappers\ -I
#        C:\Development\gzkc_smart_nbiot\csdk\eng\wrappers\external_libs\ -I
#        C:\Development\gzkc_smart_nbiot\csdk\eng\coap_cloud\ -I
#        C:\Development\gzkc_smart_nbiot\csdk\eng\coap_server\ -I
#        C:\Development\gzkc_smart_nbiot\csdk\eng\coap_server\CoAPPacket\ -I
#        C:\Development\gzkc_smart_nbiot\csdk\eng\coap_server\server\ -I
#        C:\Development\gzkc_smart_nbiot\csdk\eng\dev_bind\ -I
#        C:\Development\gzkc_smart_nbiot\csdk\eng\dev_bind\impl\ -I
#        C:\Development\gzkc_smart_nbiot\csdk\eng\dev_bind\impl\os\ -I
#        C:\Development\gzkc_smart_nbiot\csdk\eng\dev_bind\impl\awss_reset\ -I
#        C:\Development\gzkc_smart_nbiot\mbedtls\include\mbedtls\ -I
#        C:\Development\gzkc_smart_nbiot\mbedtls\include\ -I
#        C:\Development\gzkc_smart_nbiot\mbedtls\port\ksdk\ -Om)
#    Locale       =  C
#    List file    =  
#        C:\Development\gzkc_smart_nbiot\flexspi_nor_debug\list\at_api.lst
#    Object file  =  
#        C:\Development\gzkc_smart_nbiot\flexspi_nor_debug\obj\at_api.o
#
###############################################################################

C:\Development\gzkc_smart_nbiot\csdk\eng\atm\at_api.c
      1          /*
      2           * Copyright (C) 2015-2019 Alibaba Group Holding Limited
      3           */
      4          
      5          #include "infra_config.h"
      6          
      7          int at_conn_init(void);
      8          int at_parser_init(void);
      9          
     10          /* See detail struct definition in at_wrapper.h */
     11          struct at_conn_input;
     12          struct at_mqtt_input;
     13          int at_conn_input(struct at_conn_input *param);
     14          int at_mqtt_input(struct at_mqtt_input *param);
     15          

   \                                 In section .text, align 2, keep-with-next
     16          int IOT_ATM_Init(void)
     17          {
   \                     IOT_ATM_Init: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
     18          #ifdef AT_PARSER_ENABLED
     19              if (at_parser_init() < 0) {
   \        0x2   0x....'....        BL       at_parser_init
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD502             BPL.N    ??IOT_ATM_Init_0
     20              	return -1;
   \        0xA   0xF04F 0x30FF      MOV      R0,#-1
   \        0xE   0xBD02             POP      {R1,PC}
     21              }
     22          #endif
     23          
     24          #ifdef AT_TCP_ENABLED
     25              if (at_conn_init() < 0) {
   \                     ??IOT_ATM_Init_0: (+1)
   \       0x10   0x....'....        BL       at_conn_init
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD502             BPL.N    ??IOT_ATM_Init_1
     26              	return -1;
   \       0x18   0xF04F 0x30FF      MOV      R0,#-1
   \       0x1C   0xBD02             POP      {R1,PC}
     27              }
     28          #endif
     29          
     30              return 0;
   \                     ??IOT_ATM_Init_1: (+1)
   \       0x1E   0x2000             MOVS     R0,#+0
   \       0x20   0xBD02             POP      {R1,PC}          ;; return
     31          }
     32          
     33          

   \                                 In section .text, align 2, keep-with-next
     34          int IOT_ATM_Input(void * param) 
     35          { 
     36          	int ret = -1;
     37          
     38          #if defined(AT_TCP_ENABLED)
     39              ret = at_conn_input((struct at_conn_input *)param);
     40          #elif defined(AT_MQTT_ENABLED)
     41              ret = at_mqtt_input((struct at_mqtt_input *)param);
     42          #endif
     43          
     44              return ret;
   \                     IOT_ATM_Input: (+1)
   \        0x0   0x....'....        B.W      at_conn_input
     45          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   IOT_ATM_Init
         8   -> at_conn_init
         8   -> at_parser_init
       0   IOT_ATM_Input
         0   -> at_conn_input


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      34  IOT_ATM_Init
       4  IOT_ATM_Input

 
 38 bytes in section .text
 
 38 bytes of CODE memory

Errors: none
Warnings: none
